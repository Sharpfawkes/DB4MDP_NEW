# Generated by Django 3.0.2 on 2020-01-06 10:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=200)),
                ('employee_of', models.CharField(blank=True, max_length=100, null=True, verbose_name='Institute/Employer')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, verbose_name='Email address')),
                ('person_image', models.ImageField(blank=True, upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Team Data',
            },
        ),
        migrations.CreateModel(
            name='BestMDP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('best_matching_mdp', models.CharField(max_length=700, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnrichmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EqnTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equation_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HandlingAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technique_handling_ability', models.CharField(max_length=2000)),
            ],
            options={
                'verbose_name_plural': 'Handling Abilities',
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('language_id', models.AutoField(primary_key=True, serialize=False)),
                ('language_name', models.CharField(max_length=50, unique=True, verbose_name='Programming Language')),
                ('description', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Comments/Description')),
            ],
            options={
                'verbose_name_plural': 'Programming Languages',
            },
        ),
        migrations.CreateModel(
            name='MathJaxFormulas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mathjaxeqn', models.CharField(max_length=500, unique=True)),
                ('equation_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eqntype', to='mdp.EqnTypes')),
            ],
            options={
                'verbose_name_plural': 'MathJax Formulae',
            },
        ),
        migrations.CreateModel(
            name='MDPProps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mdp_property', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='QMParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_option', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('citation', models.CharField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Variants',
            fields=[
                ('variant_id', models.AutoField(primary_key=True, serialize=False)),
                ('variant_name', models.CharField(max_length=100, unique=True)),
                ('variant_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_ref', to='mdp.Reference')),
            ],
        ),
        migrations.CreateModel(
            name='Toolboxes',
            fields=[
                ('toolbox_id', models.AutoField(primary_key=True, serialize=False)),
                ('toolbox_name', models.CharField(max_length=100, unique=True, verbose_name='Toolbox Name')),
                ('description', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Comments/Description')),
                ('references', models.ManyToManyField(blank=True, to='mdp.Reference')),
            ],
            options={
                'verbose_name_plural': 'Toolboxes',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_name', models.CharField(max_length=100, unique=True)),
                ('main_task', models.BooleanField(default=True, verbose_name='Is this a parent/main task?')),
                ('actor', models.CharField(choices=[('U', 'User'), ('M', 'Machine'), ('U&M', 'User and Machine')], default='U', max_length=100)),
                ('ts', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Comments/Description')),
                ('best_mdp_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='best_mdp', to='mdp.BestMDP')),
                ('child_id', models.ManyToManyField(related_name='_task_child_id_+', to='mdp.Task')),
                ('input_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_space', to='mdp.MathJaxFormulas')),
                ('numbers', models.ManyToManyField(related_name='_task_numbers_+', to='mdp.Task', verbose_name='Number(s)')),
                ('output_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_space', to='mdp.MathJaxFormulas')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdp.Task')),
                ('reference_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdp.Reference')),
                ('task_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mdp_props', to='mdp.MDPProps')),
                ('task_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdp.TaskType')),
            ],
            options={
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='QualityMeasure',
            fields=[
                ('measure_id', models.AutoField(primary_key=True, serialize=False)),
                ('measure_name', models.CharField(max_length=100, unique=True)),
                ('best', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Comments/Description')),
                ('correlation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='correlation', to='mdp.QMParameters')),
                ('dissimilarity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dissimilarity', to='mdp.QMParameters')),
                ('geometric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geometric', to='mdp.QMParameters')),
                ('glob', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glob', to='mdp.QMParameters')),
                ('homology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homology', to='mdp.QMParameters')),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='local', to='mdp.QMParameters')),
                ('probability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='probability', to='mdp.QMParameters')),
                ('rangee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='range', to='mdp.MathJaxFormulas')),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rank', to='mdp.QMParameters')),
                ('reference', models.ManyToManyField(to='mdp.Reference')),
                ('set_difference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setdifference', to='mdp.QMParameters')),
            ],
            options={
                'verbose_name_plural': 'Quality Measures',
            },
        ),
        migrations.CreateModel(
            name='MDPsForLang',
            fields=[
                ('mdp_id', models.AutoField(primary_key=True, serialize=False)),
                ('mdp_name', models.CharField(max_length=200, unique=True, verbose_name='MDP Name(s)')),
                ('description', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Comments/Description')),
                ('circle_list', models.ManyToManyField(related_name='circles', to='mdp.Languages')),
                ('reference_list', models.ManyToManyField(max_length=300, to='mdp.Reference')),
                ('square_list', models.ManyToManyField(related_name='sqs', to='mdp.Languages')),
            ],
            options={
                'verbose_name': 'Language-Based MDP Handling',
                'verbose_name_plural': 'Language-Based MDP Handling',
            },
        ),
        migrations.CreateModel(
            name='MDP',
            fields=[
                ('mdp_id', models.AutoField(primary_key=True, serialize=False)),
                ('mdp_name', models.CharField(max_length=500, unique=True, verbose_name='MDP short form')),
                ('mdp_fullname', models.CharField(max_length=500, unique=True, verbose_name='MDP full form')),
                ('description', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Comments/Description')),
                ('cartesian', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cartesian', to='mdp.HandlingAbility')),
                ('categorical', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categorical', to='mdp.HandlingAbility')),
                ('complexity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mdp.MathJaxFormulas', verbose_name='Complexity (MathJax)')),
                ('dissimilarity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dissimilarity', to='mdp.HandlingAbility')),
                ('linearity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linearity', to='mdp.HandlingAbility')),
                ('locality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locality', to='mdp.HandlingAbility')),
                ('multi_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='multi_level', to='mdp.HandlingAbility')),
                ('ne_structures', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ne_structures', to='mdp.HandlingAbility', verbose_name='Neighbouring Structures')),
                ('ordinal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordinal', to='mdp.HandlingAbility')),
                ('out_of_core_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='out_of_core_data', to='mdp.HandlingAbility')),
                ('reference_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mdp.Reference', verbose_name='Reference Paper')),
                ('stability', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stability', to='mdp.HandlingAbility')),
                ('steerability', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steerability', to='mdp.HandlingAbility')),
                ('supervision', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervision', to='mdp.HandlingAbility')),
                ('tech_variants', models.ManyToManyField(related_name='variantstab', to='mdp.Variants')),
                ('variant_refs', models.ManyToManyField(related_name='mainvarref', to='mdp.Reference')),
            ],
            options={
                'verbose_name_plural': 'Projection Techniques',
            },
        ),
        migrations.AddField(
            model_name='languages',
            name='reference_list',
            field=models.ManyToManyField(max_length=300, to='mdp.Reference'),
        ),
        migrations.AddField(
            model_name='languages',
            name='toolboxes_suppd',
            field=models.ManyToManyField(blank=True, max_length=200, to='mdp.Toolboxes'),
        ),
        migrations.CreateModel(
            name='Enrichment',
            fields=[
                ('enrichment_id', models.AutoField(primary_key=True, serialize=False)),
                ('enrichment_name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Comments/Description')),
                ('enrichment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdp.EnrichmentType')),
                ('references', models.ManyToManyField(related_name='enrichmentrefs', to='mdp.Reference')),
            ],
            options={
                'verbose_name_plural': 'Enrichments',
            },
        ),
    ]
